//-----------------------------------------------
//        DATA  VALIDATION
//-----------------------------------------------

// in controller

$rules = [
            'name'=> 'required|max:20|',
            'email'=>'sometimes|required|email'   // sometimes - если поля с именем email нет в форме, валедироватся оно не будет
        ];
$this->validate($request, $rules);

-------------------

// in view

@if(count($errors) > 0)
    <div class="alert alert-danger">
        <ul>
            @foreach($errors->all() as $error)
                <li>{{ $error }}</li>
            @endforeach
        </ul>
    </div>
@endif

//-----------------------
use Validator;

$rules = [
            'name'=> 'required|max:20|',
            'email'=>'required|email'
        ];

$messages = []

$validator = Validator::make($reqest->all(), $rules, $messages);        // prepare validator

if($validator->fails()){                                                // run validator
    return Redirect::back()->withErrors($validator)->withInput();
}

// view //

@if($errors->any())
<h4>{{$errors->first()}}</h4>
@endif

------------------------------------------
// make request class for validation
------------------------------------------

php artisan make:request ContactRequest         // name need to be NameRequest
//new request class will be appear in app\Http\Requests
// put write rules in method rules()
// if we dn't need auth, change return false to return true
// for custom messages create method 'public function messages(){ return [...]; }'

public function messages(){
    return [
        'requires' => 'Поле :attribute обязательно для заполнения',    // rule => message (:attribute - will be substituted with input name)
        'name.requires' => 'Поле :attribute обязательно для заполнения',    // only for input name
    ];
}


// in controller write
use App\Http\Requests\ContactRequest;

class....{
    public function methodName(ContactRequest $request){}
}

//----------------------------------
//----------------------------------
// we can receive array of errors in Controller


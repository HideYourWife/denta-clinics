//---------------------------------------------------------------
//                MIGRATIONS
//---------------------------------------------------------------

php artisan make:migration migration_name --create=tableName // create migration with table tableName
php artisan make:migration new_migration_name --table=tableName // change migration table to new
php artisan migrate  // start  migration
php artisan migrate:rollback  // revert last migration
php artisan migrate:rollback --step=5   // revert 5 migration steps
php artisan migrate:reset  // revert all migrations
php artisan migrate:refresh --seed  // revert all migrations after migrate, after seed all data

$table->string('name', 100) // Varchar 100
$table->text('name', 100) // text
$table->text('name', 100)->nullable() // modifiers
$table->text('name', 100)->default($value) // modifiers
$table->text('name', 100)->unsigned() // modifiers
-----
$table->softDeletes();   // create column for soft element delete
$table->dropColumn('deleted_at');  // for function down() in migration
----
$table->engine = 'InnoDB';  // set a table engine in migration

$table->dropColumn('columnName') // drop column on down() function in migration

Schema::hasTable('tableName')  // logic checks
Schema::hasColumn('columnName')  // logic checks
----------
"doctrine/dbal":"*"    // composer update  // place in composer.json for table modification like ->change
$table->bigInteger('columnName')->change();
----------
$table->foreign('task_id')->references('id')->on('tasks');
alter table users add foreign key (city_id) references cities (id) on delete cascade on update cascade;  // sql query


-------------------------------
-------------------------------

